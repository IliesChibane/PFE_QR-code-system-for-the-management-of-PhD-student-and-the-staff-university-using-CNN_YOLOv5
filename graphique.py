# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'interface.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QSizePolicy, QApplication
from PyQt5.QtCore import QDate
from PyQt5.QtGui import QPixmap
import numpy as np 
import pandas as pd
import cv2
from pyzbar.pyzbar import decode
import pyqrcode
import segno
import os
import datetime as dt
from pyzbar.pyzbar import decode
from reportlab.pdfgen import canvas
from reportlab.lib.units import inch
from reportlab.lib.colors import magenta, red
from reportlab.lib.styles import getSampleStyleSheet
from reportlab.lib.pagesizes import A4
from reportlab.lib.units import inch
from reportlab.platypus import SimpleDocTemplate, Paragraph, Image, Spacer, PageBreak, Table, TableStyle# add this at the top of the script
from reportlab.lib import utils
from functools import partial
import ast
import shutil
import argparse
import importlib
#VARIABLE GLOBALE PERMETTANT D'ETEINDRE LA WEBCAM APRES LA FIN DU SCAN
os.environ["OPENCV_VIDEOIO_PRIORITY_MSMF"] = "0"


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowIcon(QtGui.QIcon('USTHB_Logo.png'))
        h = QApplication.desktop().size().height()*0.9
        w = QApplication.desktop().size().width()*0.8
        inc = (h-180)//(23)
        debInfo = 180
        MainWindow.resize(w, h)
        MainWindow.setFixedSize(w, h)
        MainWindow.setStyleSheet("background-color: #ffffff ; border-color: #ffffff")
        MainWindow.setTabShape(QtWidgets.QTabWidget.Triangular)
        MainWindow.setAnimated(True)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.resize(w, h)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        self.centralwidget.setFont(font)
        self.centralwidget.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.centralwidget.setStyleSheet("background-color: white; border-color: transparent;\n"
"")
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.resize(w, h)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 941, 721))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        self.tabWidget.setFont(font)
        self.tabWidget.setStyleSheet("")
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Triangular)
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.resize(w ,h )
        self.tab.setObjectName("tab")
        self.line_2 = QtWidgets.QFrame(self.tab)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setObjectName("line_2")
        self.label = QtWidgets.QLabel(self.tab)
        self.label.setGeometry(QtCore.QRect(w//2 -310//2, 170, 310, 51))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.label.setFont(font)
        self.label.setStyleSheet("background-color: transparent; ")
        self.label.setTextFormat(QtCore.Qt.PlainText)
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.label_USTHB = QtWidgets.QLabel(self.tab)
        self.label_USTHB.setGeometry(QtCore.QRect(200, 40, 551, 81))
        self.line_2.setGeometry(QtCore.QRect(w//2 + 310//2 +20, 190, w, 20))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(52, 82, 181))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(52, 82, 181))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.label_USTHB.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label_USTHB.setFont(font)
        self.label_USTHB.setAcceptDrops(False)
        self.label_USTHB.setAutoFillBackground(False)
        self.label_USTHB.setStyleSheet("background-color: transparent; ")
        self.label_USTHB.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label_USTHB.setTextFormat(QtCore.Qt.PlainText)
        self.label_USTHB.setScaledContents(True)
        self.label_USTHB.setWordWrap(True)
        self.label_USTHB.setObjectName("label_USTHB")
        self.faculteCombo = QtWidgets.QComboBox(self.tab)
        self.faculteCombo.setGeometry(QtCore.QRect(150, 360, 500, 31))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        font.setItalic(True)
        self.faculteCombo.setFont(font)
        self.faculteCombo.setStyleSheet(" background-color: rgba(255, 255, 255,90)\n"
"\n"
"\n"
"")
        self.faculteCombo.setObjectName("faculteCombo")
        self.faculteCombo.addItem("")
        self.faculteCombo.addItem("")
        self.faculteCombo.addItem("")
        self.faculteCombo.addItem("")
        self.faculteCombo.addItem("")
        self.faculteCombo.addItem("")
        self.faculteCombo.addItem("")
        self.faculteCombo.addItem("")

        self.validation = QtWidgets.QLabel(self.tab)
        self.validation.setFont(font)
        self.validation.setGeometry(QtCore.QRect(150, 390, 700, 30))
        self.validation.setStyleSheet("color: red; background-color: transparent; font-size: 10pt;")
        self.validation.setText("Aucune faculté selectionnée")
        self.validation.setScaledContents(True)
        self.validation.setObjectName("validation")


        self.line = QtWidgets.QFrame(self.tab)
        self.line.setGeometry(QtCore.QRect(10, 190, w//2 - 310//2 -20, 20))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.USTHBlogo = QtWidgets.QLabel(self.tab)
        self.USTHBlogo.setGeometry(QtCore.QRect(0, 0, 191, 191))
        self.USTHBlogo.setStyleSheet("background-color: transparent; ")
        self.USTHBlogo.setText("")
        self.USTHBlogo.setPixmap(QtGui.QPixmap("USTHB_Logo.png"))
        self.USTHBlogo.setScaledContents(True)
        self.USTHBlogo.setObjectName("USTHBlogo")
        self.label_2 = QtWidgets.QLabel(self.tab)
        self.label_2.setGeometry(QtCore.QRect(50, 340, 141, 21))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(10)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("background-color: transparent;\n"
"")
        self.label_2.setObjectName("label_2")
        self.validerBtn = QtWidgets.QPushButton(self.tab)
        self.validerBtn.setGeometry(QtCore.QRect(560, h//2+50, 191, 31))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(20, 133, 130))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(20, 133, 130))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        self.validerBtn.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(10)
        self.validerBtn.setFont(font)
        self.validerBtn.setStyleSheet(" background-color: rgba(85, 170, 255,90)")
        self.validerBtn.setAutoDefault(False)
        self.validerBtn.setDefault(False)
        self.validerBtn.setFlat(False)
        self.validerBtn.setObjectName("validerBtn")
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.USTHBlogo_2 = QtWidgets.QLabel(self.tab_2)
        self.USTHBlogo_2.setGeometry(QtCore.QRect(0, 0, 191, 191))
        self.USTHBlogo_2.setText("")
        self.USTHBlogo_2.setPixmap(QtGui.QPixmap("USTHB_Logo.png"))
        self.USTHBlogo_2.setScaledContents(True)
        self.USTHBlogo_2.setObjectName("USTHBlogo_2")
        self.label_USTHB_2 = QtWidgets.QLabel(self.tab_2)
        self.label_USTHB_2.setGeometry(QtCore.QRect(200, 40, 551, 81))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(52, 82, 181))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(52, 82, 181))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.label_USTHB_2.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label_USTHB_2.setFont(font)
        self.label_USTHB_2.setAcceptDrops(False)
        self.label_USTHB_2.setAutoFillBackground(False)
        self.label_USTHB_2.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label_USTHB_2.setTextFormat(QtCore.Qt.PlainText)
        self.label_USTHB_2.setScaledContents(True)
        self.label_USTHB_2.setWordWrap(True)
        self.label_USTHB_2.setObjectName("label_USTHB_2")
        self.stackedWidget = QtWidgets.QStackedWidget(self.tab_2)
        self.stackedWidget.setGeometry(QtCore.QRect(0, 180, w, h))
        self.stackedWidget.setObjectName("stackedWidget")
        self.page = QtWidgets.QWidget()
        self.page.setObjectName("page")
        self.label_6 = QtWidgets.QLabel(self.page)
        self.label_6.setGeometry(QtCore.QRect(10, 10, 301, 31))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(14)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.line_3 = QtWidgets.QFrame(self.page)
        self.line_3.setGeometry(QtCore.QRect(320, 20, w-20, 20))
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.dateEdit = QtWidgets.QDateEdit(self.page)
        self.dateEdit.setGeometry(QtCore.QRect(140, 80, 221, 31))
        self.dateEdit.setObjectName("dateEdit")
        DateDuJour = dt.datetime.now()
        ddj = QDate(DateDuJour.year, DateDuJour.month, DateDuJour.day)
        self.dateEdit.setDate(ddj)
        self.label_8 = QtWidgets.QLabel(self.page)
        self.label_8.setGeometry(QtCore.QRect(10, 80, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(self.page)
        self.label_9.setGeometry(QtCore.QRect(10, 190, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        self.label_9.setFont(font)
        self.label_9.setObjectName("label_9")
        self.Mat1 = QtWidgets.QLineEdit(self.page)
        self.Mat1.setGeometry(QtCore.QRect(140, 190, 221, 31))
        self.Mat1.setPlaceholderText("")
        self.Mat1.setObjectName("Mat1")
        self.VisualiserBtn = QtWidgets.QPushButton(self.page)
        self.VisualiserBtn.setGeometry(QtCore.QRect(360, 310, 191, 31))
        self.label_PATH = QtWidgets.QLabel(self.page)
        self.label_PATH.setGeometry(QtCore.QRect(500, 80, 111, 50))
        self.label_PATH.setHidden(True)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(20, 133, 130))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(20, 133, 130))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        self.VisualiserBtn.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(10)
        self.VisualiserBtn.setFont(font)
        self.VisualiserBtn.setStyleSheet(" background-color: rgba(85, 170, 255,90)")
        self.VisualiserBtn.setAutoDefault(False)
        self.VisualiserBtn.setDefault(False)
        self.VisualiserBtn.setFlat(False)
        self.VisualiserBtn.setObjectName("VisualiserBtn")
        self.ImprimerBtn = QtWidgets.QPushButton(self.page)
        self.ImprimerBtn.setGeometry(QtCore.QRect(360, 360, 191, 31))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(20, 133, 130))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(20, 133, 130))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        self.ImprimerBtn.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(10)
        self.ImprimerBtn.setFont(font)
        self.ImprimerBtn.setStyleSheet(" background-color: rgba(85, 170, 255,90)")
        self.ImprimerBtn.setAutoDefault(False)
        self.ImprimerBtn.setDefault(False)
        self.ImprimerBtn.setFlat(False)
        self.ImprimerBtn.setObjectName("ImprimerBtn")
        self.ScannerBtn1 = QtWidgets.QPushButton(self.page)
        self.ScannerBtn1.setGeometry(QtCore.QRect(180, 230, 111, 21))
        self.ScannerBtn1.clicked.connect(lambda: self.Scanner(1))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 20))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(20, 133, 130))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 20))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 20))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 20))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(20, 133, 130))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 20))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 20))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 20))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 20))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 20))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        self.ScannerBtn1.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(8)
        self.ScannerBtn1.setFont(font)
        self.ScannerBtn1.setStyleSheet(" background-color: rgba(85, 170, 255,20)")
        self.ScannerBtn1.setAutoDefault(False)
        self.ScannerBtn1.setDefault(False)
        self.ScannerBtn1.setFlat(False)
        self.ScannerBtn1.setObjectName("ScannerBtn1")
        self.label_17 = QtWidgets.QLabel(self.page)
        self.label_17.setGeometry(QtCore.QRect(160, 120, 191, 20))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(7)
        self.label_17.setFont(font)
        self.label_17.setObjectName("label_17")
        self.stackedWidget.addWidget(self.page)
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setObjectName("page_2")
        self.line_4 = QtWidgets.QFrame(self.page_2)
        self.line_4.setGeometry(QtCore.QRect(370, 20, w-20, 20))
        self.line_4.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.label_7 = QtWidgets.QLabel(self.page_2)
        self.label_7.setGeometry(QtCore.QRect(10, 10, 351, 31))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(14)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.ScannerBtn2 = QtWidgets.QPushButton(self.page_2)
        self.ScannerBtn2.setGeometry(QtCore.QRect(40, 130, 191, 31))
        self.ScannerBtn2.clicked.connect(lambda: self.Scanner(2))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(20, 133, 130))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(20, 133, 130))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        self.ScannerBtn2.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(10)
        self.ScannerBtn2.setFont(font)
        self.ScannerBtn2.setStyleSheet(" background-color: rgba(85, 170, 255,90)")
        self.ScannerBtn2.setAutoDefault(False)
        self.ScannerBtn2.setDefault(False)
        self.ScannerBtn2.setFlat(False)
        self.ScannerBtn2.setObjectName("ScannerBtn2")
        self.label_16 = QtWidgets.QLabel(self.page_2)
        self.label_16.setGeometry(QtCore.QRect(250, 50, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        self.label_16.setFont(font)
        self.label_16.setObjectName("label_16")
        self.Mat2 = QtWidgets.QLineEdit(self.page_2)
        self.Mat2.setGeometry(QtCore.QRect(330, 50, 271, 31))
        self.Mat2.setPlaceholderText("")
        self.Mat2.setObjectName("Mat2")
        self.ChercherBtn = QtWidgets.QPushButton(self.page_2)
        self.ChercherBtn.setGeometry(QtCore.QRect(40, 80, 191, 31))
        self.ChercherBtn.clicked.connect(lambda: self.AffichInfo(self.Mat2.text()))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(20, 133, 130))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(20, 133, 130))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(85, 170, 255, 90))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        self.ChercherBtn.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(10)
        self.ChercherBtn.setFont(font)
        self.ChercherBtn.setStyleSheet(" background-color: rgba(85, 170, 255,90)")
        self.ChercherBtn.setAutoDefault(False)
        self.ChercherBtn.setDefault(False)
        self.ChercherBtn.setFlat(False)
        self.ChercherBtn.setObjectName("ChercherBtn")
        self.nom = QtWidgets.QLabel(self.page_2)
        self.nom.setGeometry(QtCore.QRect(40, debInfo, w*0.77, h*0.028))
        self.nom.setWordWrap(True)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.nom.setFont(font)
        self.nom.setObjectName("nom")

        self.prenom = QtWidgets.QLabel(self.page_2)
        self.prenom.setGeometry(QtCore.QRect(40, debInfo + inc, w*0.77, h*0.028))
        self.prenom.setWordWrap(True)
        self.prenom.setFont(font)
        self.prenom.setObjectName("prenom")

        self.dn = QtWidgets.QLabel(self.page_2)
        self.dn.setGeometry(QtCore.QRect(40, debInfo+(inc*2), w*0.77, h*0.028))  
        self.dn.setWordWrap(True)
        self.dn.setFont(font)
        self.dn.setObjectName("dn")

        self.ln = QtWidgets.QLabel(self.page_2)
        self.ln.setGeometry(QtCore.QRect(40, debInfo+(inc*3), w*0.77, h*0.028))
        self.ln.setWordWrap(True)
        
        self.email = QtWidgets.QLabel(self.page_2)
        self.email.setGeometry(QtCore.QRect(40, debInfo+(inc*4), w*0.77, h*0.028))

        self.tel = QtWidgets.QLabel(self.page_2)
        self.tel.setGeometry(QtCore.QRect(40, debInfo+(inc*5), w*0.77, h*0.028))

        self.doctorat = QtWidgets.QLabel(self.page_2)
        self.doctorat.setGeometry(QtCore.QRect(40, debInfo+inc*6, w*0.77, h*0.028))
        self.doctorat.setWordWrap(True)
        self.doctorat.setFont(font)
        self.doctorat.setObjectName("doctorat")

        self.filiere = QtWidgets.QLabel(self.page_2)
        self.filiere.setGeometry(QtCore.QRect(40, debInfo+(inc*7), w*0.77, h*0.028))

        self.domaine = QtWidgets.QLabel(self.page_2)
        self.domaine.setGeometry(QtCore.QRect(40, debInfo+(inc*8), w*0.77, h*0.028))

        self.specialite = QtWidgets.QLabel(self.page_2)
        self.specialite.setGeometry(QtCore.QRect(40, debInfo+(inc*9), w*0.77, h*0.028))

        self.intitule = QtWidgets.QLabel(self.page_2)
        self.intitule.setFont(font)
        self.intitule.setWordWrap(True)
        self.intitule.setObjectName("intitule")
        self.intitule.setGeometry(QtCore.QRect(40, debInfo+(inc*10), w*0.77, h*0.028))

        self.ap = QtWidgets.QLabel(self.page_2)
        self.ap.setGeometry(QtCore.QRect(40, debInfo+(inc*11), w*0.77, h*0.028))

        self.directeur_these = QtWidgets.QLabel(self.page_2)
        self.directeur_these.setGeometry(QtCore.QRect(40, debInfo+(inc*12), w*0.77, h*0.028))

        self.directeur_these_2 = QtWidgets.QLabel(self.page_2)
        self.directeur_these_2.setGeometry(QtCore.QRect(40, debInfo+(inc*13), w*0.77, h*0.028))

        self.ln.setFont(font)
        self.ln.setObjectName("ln")

        self.email.setFont(font)
        self.email.setObjectName("email")
        
        self.tel.setWordWrap(True)
      
        self.tel.setFont(font)
        self.tel.setObjectName("tel")
        
     
        self.filiere.setFont(font)
        self.filiere.setObjectName("filiere")
        
        self.domaine.setWordWrap(True)
       
        self.domaine.setFont(font)
        self.domaine.setObjectName("domaine")
        
        self.specialite.setWordWrap(True)
       
        self.specialite.setFont(font)
        self.specialite.setObjectName("specialite")
        
        self.ap.setWordWrap(True)
        
        self.ap.setFont(font)
        self.ap.setObjectName("ap")
        
        self.directeur_these.setWordWrap(True)
        
        self.directeur_these.setFont(font)
        self.directeur_these.setObjectName("directeur_these")
        
        self.directeur_these_2.setWordWrap(True)
        
        self.directeur_these_2.setFont(font)
        self.directeur_these_2.setObjectName("directeur_these_2")
        self.qr = QtWidgets.QLabel(self.page_2)
        self.qr.setGeometry(QtCore.QRect(w-200, h-410, 100, 100))
        self.qr.setText("")
        self.qr.setObjectName("qr")
        self.pathQR = ""
        self.photo = QtWidgets.QLabel(self.page_2)
        self.photo.setGeometry(QtCore.QRect(w-200, h-650, 140, 140))
        self.photo.setText("")
        self.photo.setObjectName("photo")
        self.stackedWidget.addWidget(self.page_2)
        self.right = QtWidgets.QPushButton(self.tab_2)
        self.right.setGeometry(QtCore.QRect(230, 160, 31, 23))
        self.right.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(1))
        self.right.setStyleSheet("background-color: #ffffff")
        self.right.setObjectName("right")
        self.left = QtWidgets.QPushButton(self.tab_2)
        self.left.setGeometry(QtCore.QRect(200, 160, 31, 23))
        self.left.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(0) )
        self.left.setStyleSheet("background-color: #ffffff")
        self.left.setObjectName("left")
        self.tabWidget.addTab(self.tab_2, "")
        self.tabWidget.resize(w,h)
        self.label_15 = QtWidgets.QLabel(self.centralwidget)
        self.label_15.setGeometry(QtCore.QRect(w-270, h-60, 261, 20))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        self.label_15.setFont(font)
        self.label_15.setStyleSheet("background-color: transparent; ")
        self.label_15.setWordWrap(True)
        self.label_15.setObjectName("label_15")
        self.label_14 = QtWidgets.QLabel(self.centralwidget)
        self.label_14.setGeometry(QtCore.QRect(w-270, h-90, 261, 30))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        self.label_14.setFont(font)
        self.label_14.setStyleSheet("background-color: transparent; ")
        self.label_14.setWordWrap(True)
        self.label_14.setObjectName("label_14")
        self.label_13 = QtWidgets.QLabel(self.centralwidget)
        self.label_13.setGeometry(QtCore.QRect(w-60, h-60, 21, 20))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        self.label_12 = QtWidgets.QLabel(self.centralwidget)
        self.label_12.setGeometry(QtCore.QRect(w-270, h-40, 260, 20))
        self.label_12.setFont(font)
        self.label_12.setStyleSheet("background-color: transparent; ")
        self.label_12.setObjectName("label_12")

        self.label_13.setFont(font)
        self.label_13.setStyleSheet("background-color: transparent; ")
        self.label_13.setObjectName("label_13")
        MainWindow.setCentralWidget(self.centralwidget)
        self.actionGeneration = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        self.actionGeneration.setFont(font)
        self.actionGeneration.setObjectName("actionGeneration")
        self.actionScanner_un_certificat = QtWidgets.QAction(MainWindow)
        self.actionScanner_un_certificat.setObjectName("actionScanner_un_certificat")

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        self.stackedWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("Gestion des certificats", "Gestion des certificats "))
        MainWindow.setStatusTip(_translate("MainWindow", "Gestion des certificats de scolarité"))
        self.tabWidget.setStatusTip(_translate("MainWindow", "Generer les certificats et Afficher les informations des doctorants"))
        self.label.setText(_translate("MainWindow", "Gestion des certificats de scolarité"))
        self.label_USTHB.setText(_translate("MainWindow", "Université des Sciences et Technologie Houari Boumediene"))
        self.faculteCombo.setItemText(0, _translate("MainWindow", "Faculté d\'électronique et d\'informatique"))
        self.faculteCombo.setItemText(1, _translate("MainWindow", "Faculté des mathématiques"))
        self.faculteCombo.setItemText(2, _translate("MainWindow", "Faculté des sciences biologiques"))
        self.faculteCombo.setItemText(3, _translate("MainWindow", "Faculté des sciences de la terre et de géographie"))
        self.faculteCombo.setItemText(4, _translate("MainWindow", "Faculté de physique"))
        self.faculteCombo.setItemText(5, _translate("MainWindow", "Faculté de chimie"))
        self.faculteCombo.setItemText(6, _translate("MainWindow", "Faculté de Génie Mécanique et Génie des Procédés"))
        self.faculteCombo.setItemText(7, _translate("MainWindow", "Faculté de Génie Civil"))
        self.label_2.setText(_translate("MainWindow", "Choisir faculté"))
        self.validerBtn.setText(_translate("MainWindow", "Valider"))
        self.faculte = None
        self.validerBtn.clicked.connect(self.ChoixFaculte)
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Acceuil"))
        self.label_USTHB_2.setText(_translate("MainWindow", "Université des Sciences et Technologie Houari Boumediene"))
        self.label_6.setText(_translate("MainWindow", "Génerer un Certificat de Scolarité"))
        self.label_8.setText(_translate("MainWindow", "Choisir date"))
        self.label_9.setText(_translate("MainWindow", "Saisir Matricule"))
        self.VisualiserBtn.setText(_translate("MainWindow", "Génerer"))
        self.VisualiserBtn.setShortcut(_translate("MainWindow", "Ctrl+V"))
        self.VisualiserBtn.clicked.connect(lambda: self.GenCertificat(self.Mat1.text(),str(self.dateEdit.date().year())))
        self.ImprimerBtn.setText(_translate("MainWindow", "Imprimer"))
        self.ImprimerBtn.setShortcut(_translate("MainWindow", "Ctrl+P"))
        self.ImprimerBtn.clicked.connect(self.imprimer)
        self.ImprimerBtn.setEnabled(False)
        self.ScannerBtn1.setText(_translate("MainWindow", "Utiliser le Scanner"))
        self.ScannerBtn1.setShortcut(_translate("MainWindow", "Ctrl+V"))
        self.label_17.setText(_translate("MainWindow", "Exemple : 2021 pour l\'année 2021-2022"))
        self.label_7.setText(_translate("MainWindow", "Afficher les informations d\'un doctorant"))
        self.ScannerBtn2.setText(_translate("MainWindow", "Scanner"))
        self.ScannerBtn2.setShortcut(_translate("MainWindow", "Ctrl+V"))
        self.label_16.setText(_translate("MainWindow", " Matricule"))
        self.ChercherBtn.setText(_translate("MainWindow", "Chercher"))
        self.ChercherBtn.setShortcut(_translate("MainWindow", "Ctrl+V"))
        self.nom.setText(_translate("MainWindow", "Nom :"))
        self.prenom.setText(_translate("MainWindow", "Prénom :"))
        self.doctorat.setText(_translate("MainWindow", "Doctorat :"))
        self.doctorat.setWordWrap(True)
        self.dn.setText(_translate("MainWindow", "Date de Naissance :"))
        self.ln.setText(_translate("MainWindow", "Lieu de Naissance :"))
        self.intitule.setText(_translate("MainWindow", "Intitulé du Sujet :"))
        self.email.setText(_translate("MainWindow", "E-mail :"))
        self.tel.setText(_translate("MainWindow", "Téléphone :"))
        self.filiere.setText(_translate("MainWindow", "Filière :"))
        self.filiere.setWordWrap(True)
        self.domaine.setText(_translate("MainWindow", "Domaine :"))
        self.specialite.setText(_translate("MainWindow", "Spécialité :"))
        self.ap.setText(_translate("MainWindow", "Année de première :"))
        self.directeur_these.setText(_translate("MainWindow", "Directeur de thèse :"))
        self.directeur_these_2.setText(_translate("MainWindow", "Co-Directeur de thèse :"))
        self.right.setText(_translate("MainWindow", "→"))
        self.left.setText(_translate("MainWindow", "←"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Certificats"))
        self.label_15.setText(_translate("MainWindow", "Auteur : Bourouina Rania et Chibane Ilies"))
        self.label_14.setText(_translate("MainWindow", "Copyright Faculté d\'éléctronique et d\'informatique"))
        self.label_13.setText(_translate("MainWindow", "©"))
        self.label_12.setText(_translate("MainWindow", "MR. LARABI Slimane"))

        self.actionGeneration.setText(_translate("MainWindow", "Génerer un certificat"))
        self.actionGeneration.setStatusTip(_translate("MainWindow", "Génération d\'un certificat de scolarité avec un QR Code"))
        self.actionGeneration.setShortcut(_translate("MainWindow", "Ctrl+G"))
        self.actionScanner_un_certificat.setText(_translate("MainWindow", "Scanner un certificat"))
        self.actionScanner_un_certificat.setStatusTip(_translate("MainWindow", "Scanner le QR code  d\'un certificat pour afficher toutes les informations du doctorant"))
        self.actionScanner_un_certificat.setShortcut(_translate("MainWindow", "Ctrl+S"))
        pd.set_option('display.max_colwidth', 100)

############Fonctions#############
    def Scanner(self,S):
        yolo = importlib.import_module('detect')
        qrimg = yolo.detect()
        if qrimg is not None:
            decoded_data = decode(qrimg)
            for QR in decoded_data:
                data = decoded_data[0][0]
                data = data.decode()
                if S == 1:
                    date = dt.datetime.now()
                    if date.month < 9:
                        d = QDate((date.year-1), 1, 1)
                        self.dateEdit.setDate(d)
                    else:
                        d = QDate(date.year, 1, 1)
                        self.dateEdit.setDate(d)
                    self.Mat1.clear()
                    self.Mat1.insert(data)
                    self.GenCertificat(self.Mat1.text(),str(self.dateEdit.date().year()))
                elif S == 2:
                    self.Mat2.clear()
                    self.Mat2.insert(data)
                    self.AffichInfo(self.Mat2.text())

    def AffichInfo(self,mat): 
        dt= pd.read_excel ('data.xlsx', sheet_name='Identification')
        Sujet_Doctorat = pd.read_excel ('data.xlsx', sheet_name='Sujet_Doctorat')
        Directeur_thèse = pd.read_excel ('data.xlsx', sheet_name='Directeur_thèse')
        Historique_Inscriptions = pd.read_excel ('data.xlsx', sheet_name='Historique_Inscriptions')
        info = dt.loc[dt['Matricule'] == mat]
        sauv_index = info.index
        mat = info['Matricule'].to_string(index=False)
        if mat != "Series([], )" :
            self.nom.clear()
            self.nom.setText("Nom : "+info['NOM'].to_string(index=False))
            self.prenom.clear()
            self.prenom.setText("Prenom : "+info['PRENOM'].to_string(index=False))
            self.doctorat.clear()
            self.doctorat.setText("Doctorat : "+ Sujet_Doctorat.loc[sauv_index,'Type de Doctorat'].to_string(index=False))
            self.domaine.clear()
            self.domaine.setText("Domaine : "+ Sujet_Doctorat.loc[sauv_index,'Domaine'].to_string(index=False))
            self.filiere.clear()
            self.filiere.setText("Filière : "+ Sujet_Doctorat.loc[sauv_index,'Filière'].to_string(index=False))
            self.specialite.clear()
            self.specialite.setText("Spécialité : "+ Sujet_Doctorat.loc[sauv_index,'Spécialité'].to_string(index=False))
            self.intitule.clear()
            self.intitule.setText("Intitulé du Sujet : "+ Sujet_Doctorat.loc[sauv_index,'Intitule du sujet'].to_string(index=False))
            self.directeur_these.clear()
            self.directeur_these.setText("Directeur de thèse : "+ Directeur_thèse.loc[sauv_index,'Nom et Prénom du Directeur de thèse'].to_string(index=False))
            self.directeur_these_2.clear()
            self.directeur_these_2.setText("Co-Directeur de thèse : "+ Directeur_thèse.loc[sauv_index,'Nom et Prénom du co-Directeur de thèse'].to_string(index=False))
            self.ap.clear()
            self.ap.setText("Année de première inscription : " +  Historique_Inscriptions.loc[sauv_index,'Année de première  inscription'].to_string(index = False))
            self.dn.clear()
            self.dn.setText("Date de naissance : "+info['DATE DE NAISSANCE'].to_string(index=False))
            self.ln.clear()
            self.ln.setText("Lieu de naissance : "+info['LIEU DE NAISSANCE'].to_string(index=False))
            self.email.clear()
            self.email.setText("Email : "+ info['Email'].to_string(index=False))
            self.tel.clear()
            self.tel.setText("Telephone : "+ info['Telephone'].to_string(index=False))
        else:
            self.nom.clear()
            self.nom.setText("Nom : Doctorant inexistant")
            self.prenom.clear()
            self.prenom.setText("Prenom : Doctorant inexistant")
            self.doctorat.clear()
            self.doctorat.setText("Doctorat : Doctorant inexistant")
            self.domaine.clear()
            self.domaine.setText("Domaine : Doctorant inexistant")
            self.filiere.clear()
            self.filiere.setText("Filière : Doctorant inexistant")
            self.specialite.clear()
            self.specialite.setText("Spécialité : Doctorant inexistant")
            self.intitule.clear()
            self.intitule.setText("Intitulé du Sujet : Doctorant inexistant")
            self.directeur_these.clear()
            self.directeur_these.setText("Directeur de thèse : Doctorant inexistant")
            self.directeur_these_2.clear()
            self.directeur_these_2.setText("Co-Directeur de thèse : Doctorant inexistant")
            self.ap.clear()
            self.ap.setText("Année de première inscription : Doctorant inexistant")
            self.dn.clear()
            self.dn.setText("Date de naissance : Doctorant inexistant")
            self.ln.clear()
            self.ln.setText("Lieu de naissance : Doctorant inexistant")
            self.email.clear()
            self.email.setText("Email : Doctorant inexistant")
            self.tel.clear()
            self.tel.setText("Telephone : Doctorant inexistant")

        p = info['photo'].to_string(index=False)[1:]
        pdp = QPixmap(p)
        pdp = pdp.scaled(140, 140);
        self.photo.setPixmap(pdp)
        paqr = ""
        if(self.QRE(mat[1:] + ".png")==True):
            paqr="QRcode"+ "\\" + mat[1:] + ".png"
        else:
            paqr = "QRcode"+"\\"+"NOQR.png"
        pqr = QPixmap(paqr)
        pqr = pqr.scaled(100,100)
        self.qr.setPixmap(pqr)
        
    def GenCertificat(self,mat,ann):
        if mat:		
            df = pd.read_excel ('data.xlsx', sheet_name='Identification')
            info = df.loc[df['Matricule'] == mat]
            sauv_index = info.index
            nom = info['NOM'].to_string(index=False)
            prenom=info['PRENOM'].to_string(index=False)
            sexe=info['Sexe']
            data=[[],[]]
            data[0]=[nom,prenom]
            date_naiss=info['DATE DE NAISSANCE'].to_string(index=False)
            lieu_naiss=info['LIEU DE NAISSANCE'].to_string(index=False)
            email=info['Email'].to_string(index=False)
            tel=info['Telephone'].to_string(index=False)
            nat=info['Nationalité'].to_string(index=False)

            df2 = pd.read_excel ('data.xlsx', sheet_name='Sujet_Doctorat')
            info2 = df2.iloc[sauv_index]

            Type_doct=info2['Type de Doctorat'].to_string(index=False)
            Filière=info2['Filière'].to_string(index=False)
            Domaine=info2['Domaine'].to_string(index=False)
            Spécialité=info2['Spécialité'].to_string(index=False)
            Intitulé=info2['Intitule du sujet'].to_string(index=False)

            df3 = pd.read_excel ('data.xlsx', sheet_name='Historique_Inscriptions')
            info3 = df3.iloc[sauv_index]
            année_inscription=info3['Année de première  inscription'].to_string(index=False)
            nombre_Gel=info3['Gel'] .to_string(index=False)
            année=int(ann)-int(année_inscription)+1-int(nombre_Gel)
            année_inscription=année


            file="certificat_doctorant"+nom+"_"+ann+"_"+str(int(ann)+1)+".pdf"

            if(self.CE(file)==False):
                img = utils.ImageReader("entete.jpg")
                iw, ih = img.getSize()

                nomQR = mat+'.png'

                if(self.QRE(nomQR)==False):
                    self.GenQR(nomQR,mat)

                c = canvas.Canvas(file)

                c.drawImage("entete.jpg", 0, 10*inch, iw*0.6, ih*0.6, preserveAspectRatio=True)
                c.setFont("Helvetica", 16)
                c.drawCentredString(5*inch, 10.5*inch, self.faculte)

                self.pathQR = "QRcode"+ "\\" + nomQR
                qri = utils.ImageReader(self.pathQR)
                qw, qh = qri.getSize()
                c.drawImage(self.pathQR, 50, 100, 80, 80, preserveAspectRatio=True)


                c.setFont("Helvetica-Bold", 16)
                c.drawCentredString(4*inch, 9.8*inch, "CERTIFICAT DE SCOLARITE")
                c.drawCentredString(4*inch, 9.4*inch, "POST-GRADUATION")
                c.setFont("Helvetica", 11)
                c.drawString(inch, 8.5*inch, "Le Doyen de la "+self.faculte+" de l'Université des Sciences")
                c.drawString(inch, 8.2*inch, "et de la Technologie Houari Boumediene Certifie que :")
                #c.drawString(inch, 7.9*inch, "")
                c.setFont("Helvetica-Bold", 11)

                if (sexe=="M").bool() :
                    c.drawString(1.2*inch, 7.5*inch, "Mr:")
                else :
                    c.drawString(1.2*inch, 7.5*inch, "Melle :")
                c.setFont("Helvetica", 11)
                #c.drawString(2.0*inch, 7.5*inch, nom)
                #c.drawString(2.6*inch, 7.5*inch, prenom)
                t=Table(data, colWidths=None)
                t.setStyle(TableStyle([('ALIGN', (0,0), (1, 1), 'LEFT')]))
                aW = 460 # available width and height
                aH = 900
                w,h = t.wrap(aW, aH)
                w=2*inch
                h=7.18*inch

                c.setFont("Helvetica-Bold", 11)
                t.drawOn(c, w, h)#,2*inch, 5*inch)
                if (sexe=="M").bool() :
                    c.drawString(1.2*inch, 7.1*inch, "Né le :")
                else :
                    c.drawString(1.2*inch, 7.1*inch, "Née le :")
                c.setFont("Helvetica", 11)
                c.drawString(2.0*inch, 7.1*inch, date_naiss)
                c.drawString(3.2*inch, 7.1*inch, "à :")
                c.drawString(3.5*inch, 7.1*inch, lieu_naiss)
                c.setFont("Helvetica-Bold", 11)
                c.drawString(1.2*inch, 6.7*inch, "Nationalité :")
                c.setFont("Helvetica", 11)
                c.drawString(2.2*inch, 6.7*inch, nat)
                c.setFont("Helvetica-Bold", 11)
                c.drawString(1.2*inch, 6.3*inch, "Matricule :")
                c.setFont("Helvetica", 11)
                c.drawString(2.2*inch, 6.3*inch, mat)
                    
                if Type_doct=="LMD" :
                    c.setFont("Helvetica-Bold", 11)
                    c.drawString(1.2*inch, 5.9*inch, "Domaine :")
                    if(Domaine=="MI"):
                        c.setFont("Helvetica", 11)
                        c.drawString(2.2*inch, 5.9*inch, "Mathématiques Informatique")
                    else:
                        c.setFont("Helvetica", 11)
                        c.drawString(2.2*inch, 5.9*inch, "Sciences et Technologies")
                    c.setFont("Helvetica-Bold", 11)
                    c.drawString(1.2*inch, 5.5*inch, "Filière :")
                    c.setFont("Helvetica", 11)
                    c.drawString(2.2*inch, 5.5*inch, Filière)
                    c.setFont("Helvetica-Bold", 11)
                    c.drawString(1.2*inch, 5.1*inch, "Spécialité :")
                    c.setFont("Helvetica", 11)
                    c.drawString(2.2*inch, 5.1*inch, Spécialité)
                    if sexe=="M" :
                        c.drawString(1.0*inch, 4.7*inch, "est inscrit  au titre de l'année universitaire    ")
                    else :
                        c.drawString(1.0*inch, 4.7*inch, "est inscrite  au titre de l'année universitaire    ")
                    c.drawString(5.0*inch, 4.7*inch,ann)
                    c.drawString(5.35*inch, 4.7*inch, "/")
                    c.drawString(5.4*inch, 4.7*inch, str(int(ann)+1))

                    c.drawString(1.0*inch, 4.3*inch, "En: ")
                    c.drawString(1.3*inch, 4.3*inch, str(année_inscription))
                    if année_inscription <10 :
                        c.drawString(1.5*inch, 4.3*inch, "ème Année")
                    else :
                        c.drawString(1.7*inch, 4.3*inch, "ème Année")
                    c.drawString(2.35*inch, 4.3*inch, "Doctorat.")
                                
                else:
                    c.setFont("Helvetica-Bold", 11)
                    c.drawString(1.2*inch, 5.9*inch, "Filière :")
                    c.setFont("Helvetica-Bold", 11)
                    c.drawString(2.2*inch, 5.9*inch, Filière)
                    c.setFont("Helvetica", 11)
                    c.drawString(1.2*inch, 5.5*inch, "Spécialité :")
                    c.setFont("Helvetica-Bold", 11)
                    c.drawString(2.2*inch, 5.5*inch, Spécialité)
                    if (sexe=="M").bool() :
                        c.drawString(1.0*inch, 5.1*inch, "est inscrit  au titre de l'année universitaire ")
                    else :
                        c.drawString(1.0*inch, 5.1*inch, "est inscrite  au titre de l'année universitaire ")
                    c.drawString(5.0*inch, 5.1*inch, ann)
                    c.drawString(5.35*inch, 5.1*inch, "/")
                    c.drawString(5.4*inch, 5.1*inch, str(int(ann)+1))

                    c.drawString(1.0*inch, 4.7*inch, "En: ")
                    c.drawString(1.3*inch, 4.7*inch, str(année_inscription))
                    if année_inscription <10 :
                        c.drawString(1.5*inch, 4.7*inch, "ème Année")
                    else :
                        c.drawString(1.6*inch, 4.7*inch, "ème Année")
                    c.drawString(2.35*inch, 4.7*inch, "Doctorat en Sciences.")
                    

                c.drawString(4.7*inch, 3.3*inch, "Bab-Ezzouar, le :")
                c.drawString(6.0*inch, 3.3*inch, dt.datetime.today().strftime("%d/%m/%Y"))
                c.setFont("Helvetica", 11)
                c.drawString(4.9*inch, 3.0*inch, "Le Doyen")
                c.setFont("Helvetica-Bold", 10)
                c.drawCentredString(4*inch, 1.0*inch,self.faculte)
                c.setFont("Helvetica", 10)
                c.drawCentredString(4*inch, 0.8*inch,"USTHB, BP. 32, El Alia, Bab Ezzouar 16111, Alger")
                c.drawCentredString(4*inch, 0.6*inch,"Tel: +213023934066, Fax: +213023934066, email: pgfei@usthb.dz") 
                c.setFont("Helvetica", 8)
                c.line(0, 1.2*inch, 10*inch, 1.1*inch)
                c.showPage()
                if ((année_inscription <= 6) and (Type_doct !="LMD")) or ((année_inscription <= 5) and (Type_doct =="LMD")):
                    c.save()
                    shutil.move(file, 'Certificat')
                    import subprocess
                    certPath = 'Certificat' + "\\"+ file
                    subprocess.Popen([certPath], shell=True)
                    self.label_PATH.clear()
                    self.label_PATH.setText(certPath)
                    self.ImprimerBtn.setEnabled(True)
                else:
                    print("Doctorant n'ayant pas droit au certificat de scolarité")
            else:
                import subprocess
                certPath = 'Certificat' + "\\"+ file
                subprocess.Popen([certPath], shell=True)
                self.label_PATH.clear()
                self.label_PATH.setText(certPath)
                self.ImprimerBtn.setEnabled(True)
        else:
            print("aucun matricule donner")
    def imprimer(self):
        os.startfile(self.label_PATH.text(),"print")
    def ChoixFaculte(self):
        self.faculte = str(self.faculteCombo.currentText())
        #print(self.faculte)
        self.validation.setText("La faculté "+ self.faculte + " a bien été selectionnée")
        self.validation.setStyleSheet("color: green; font-size: 10pt;")
        self.validation.setWordWrap(True)

    def QRE(self,nqr):
        qrcodes = os.listdir('QRcode')
        for qr in qrcodes:
            if qr == nqr:
                return True
        return False
    def CE(self,f):
        cert = os.listdir('Certificat')
        for c in cert:
            if f == c:
                return True
        return False
    def GenQR(self,nom,mat):
        qr = segno.make(mat, version=1) 
        qr.save(nom,scale = 5)
        shutil.move(nom, 'QRcode')



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
    sys.exit()
